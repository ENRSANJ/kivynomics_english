#: import HoverButton4 main
#: import mainbgcolor main
#: import secondarybgcolor main
#: import secondarybtcolor main
#: import Scroll main
#:import Window kivy.core.window.Window


<BimatrixVentana>:
    name: 'BimatrixScreen'

    BoxLayout:
        Label:
            text_size: self.size
            valign: 'middle'
            halign: 'center'
            text: "Player 1's payoff matrix"
            pos_hint: {'y': .24}

        Label:
            text_size: self.size
            valign: 'middle'
            halign: 'center'
            text: "Player 2's payoff matrix"
            pos_hint: {'y': .24}

    Caja:
        id: matriz1
        size_hint: (.4, .55)
        pos_hint: {'x': .025, 'y': .17}

    Caja:
        id: matriz2
        size_hint: (.4, .55)
        pos_hint: {'right': .975, 'y': .17}

    HoverButton4:
        text: 'Calculate'
        size_hint: (.09, .09)
        pos_hint: {'center_x': .5, 'center_y': (root.altura1-root.espaciado1)}
        on_release: root.calculanash()

    # Interruptor para seleccionar la opción de exportar a Word
    BoxLayout:
        size_hint: (.09, .09)
        orientation: 'horizontal'
        pos_hint: {'center_x': .515, 'center_y': (root.altura1-1.8*root.espaciado1)}
        Label:
            text: 'Export '
            font_size: self.height * 0.3
        CheckBox:
            id: a_word

    HoverButton4:
        text: 'Zero-sum'
        size_hint: (.09, .09)
        pos_hint: {'center_x': .5, 'center_y': (root.altura1-3*root.espaciado1)}
        on_release: root.sumanula()

    HoverButton4:
        text: 'Symmetric'
        size_hint: (.09, .09)
        pos_hint: {'center_x': .5, 'center_y': (root.altura1-4*root.espaciado1)}
        on_release: root.simetrico()

    HoverButton4:
        text: 'Random'
        size_hint: (.09, .09)
        pos_hint: {'center_x': .5, 'center_y': (root.altura1-5*root.espaciado1)}
        on_release: root.aleatorio()

    HoverButton4:
        text: 'Empty'
        size_hint: (.09, .09)
        pos_hint: {'center_x': .5, 'center_y': (root.altura1-6*root.espaciado1)}
        on_release: root.vaciar()



    SeleccionaRango:


<SeleccionaRango>:
    size_hint: (.17, .17)
    pos_hint: {'x': .005, 'top': .98}
    padding: '5dp'
    orientation: 'vertical'
    spacing: '2dp'

    canvas.before:
        Color:
            rgba: secondarybgcolor
        RoundedRectangle:
            size: self.size
            pos: self.pos

    BoxLayout:
        Label:
            markup: True
            text: '[b]# rows: [/b]'
        SeleccionaInput:
            id: numrows

    BoxLayout:
        Label:
            markup: True
            text: '[b]# columns: [/b]'
        SeleccionaInput:
            id: numcols

    BoxLayout:
        size_hint: (.25, 1)
        pos_hint: {'right': 1}
        OkButton:
            size_hint: (1, .9)
            background_color: (0, 0, 0, 0) # last zero to make it invisible
            text: 'Ok'
            on_release: root.confirmarango()
            canvas.before:
                Color:
                    rgba: secondarybtcolor
                RoundedRectangle:
                    pos: self.pos
                    size: self.size

<PopupNash>:
    # definimos el dragbehavior:
    drag_rectangle: self.x, self.y, self.width, self.height
    drag_timeout: 10000000
    drag_distance: 0

    title_color: (0, 0, 0, 1)
    title: 'Nash equilibria'
    overlay_color: (0, 0, 0, 0) # no ensombrece el fondo
    size_hint: (.6, .65)
    background: '' # white


<Cuadradito>:
    padding: [0, (self.height-self.line_height)/2]
    halign: 'center'
    input_filter: lambda text, from_undo: text[:5 - len(self.text)]
    color: (1, 0, 0, 1)
    write_tab: False
    # Tamaño de fuente relativo a la altura del TextInput
    font_size: self.height * 0.3
    multiline: False

<Fila>:
    spacing: '5dp'
    padding: '5dp'

<SeleccionaInput>:
    size_hint: (.2, 1)
    padding: [0, (self.height-self.line_height)/2]
    halign: 'center'
    write_tab: False
    font_size: self.height * 0.5
    multiline: False
    input_filter: lambda text, from_undo: text[:1 - len(self.text)]


# Ajuste automático del tamaño de fuente con la altura del botón
<HoverButton4>:
    font_size: self.height * 0.3


<BimatrixMasInfoScreen>:
    name: 'BimatrixMasInfoScreen'
    Scroll:
        GridLayout:
            cols: 2
            size_hint_y: None
            height: self.minimum_height + 100
            spacing: '10dp'
            padding: '10dp'

            WrappedLabel2:
                size_hint_x: 1.6
                size_hint_y: None
                halign: 'center'
                bold: True
                font_size: self.height*.4
                text: 'BRIMATRIX GAMES'

            WrappedLabel2:
                size_hint_y: None
                halign: 'center'
                bold: True
                font_size: self.height*.3
                text: ''

            Image:
                size_hint_y: None
                size: (1, '400dp')
                source: 'images/Bimatrix_tutorial.jpg'

            WrappedLabel2:
                size_hint_y: None
                height: self.texture_size[1]
                halign: 'justify'
                text: root.a
                bold: True
                font_size: kivy.core.window.Window.height * 0.03

            Image:
                size_hint_y: None
                size: (1, '150dp')
                source: 'images/bimatrix_output_tutorial.jpg'

            WrappedLabel2:
                size_hint_y: None
                height: self.texture_size[1]
                halign: 'justify'
                text: root.b
                bold: True
                font_size: kivy.core.window.Window.height * 0.03
